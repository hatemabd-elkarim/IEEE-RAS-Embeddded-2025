<<< Hatem Ayman Abd-Elkarim >>>

In C programming language, arrays, 2D arrays (matrices), and strings are fundamental data structures used for storing collections of data. 
---

1. Arrays in C

An array is a collection of elements of the same data type stored in contiguous memory locations.

Declaration:
int numbers[5];  // Declares an array of 5 integers

Initialization:
int numbers[5] = {1, 2, 3, 4, 5};
int numbers[] = {1, 2, 3, 4, 5}; // Size is automatically determined
int numbers[5] = {0}; // Initializes all elements to 0

Accessing Elements:
printf("%d", numbers[2]); // Outputs 3

---

2. 2D Arrays (Matrices) in C

A 2D array is essentially an array of arrays, often used to represent matrices.

Declaration:
int matrix[3][4];  // Declares a 3x4 matrix

Initialization:
int matrix[2][3] = {
    {1, 2, 3},
    {4, 5, 6}
};

Accessing Elements:
printf("%d", matrix[1][2]); // Outputs 6

---

3. Strings in C

Strings in C are arrays of characters terminated by a null character '\0'.

Declaration:
char name[10];

Initialization:
char name[] = "Alice"; // Automatically adds '\0'
char name[6] = "Alice"; // Exact size including '\0'
char name[] = {'A', 'l', 'i', 'c', 'e', '\0'};

Accessing Characters:
printf("%c", name[1]); // Outputs 'l'

Common Functions (from <string.h>):
strlen(name);      // Returns the length of the string
strcpy(dest, src); // Copies string from src to dest
strcmp(s1, s2);    // Compares two strings
strcat(s1, s2);    // Concatenates s2 to s1

---


